services:
  postgres:
    image: postgres:15
    container_name: totrackit-postgres
    environment:
      POSTGRES_DB: totrackit
      POSTGRES_USER: totrackit
      POSTGRES_PASSWORD: totrackit
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U totrackit -d totrackit"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - totrackit-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "3"

  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: totrackit-app
    ports:
      - "8080:8080"
    environment:
      DATASOURCES_DEFAULT_URL: jdbc:postgresql://postgres:5432/totrackit
      DATASOURCES_DEFAULT_USERNAME: totrackit
      DATASOURCES_DEFAULT_PASSWORD: totrackit
      DATASOURCES_DEFAULT_MAXIMUM_POOL_SIZE: 10
      DATASOURCES_DEFAULT_MINIMUM_IDLE: 2
      MICRONAUT_ENVIRONMENTS: docker
      MICRONAUT_SERVER_HOST: 0.0.0.0
      JAVA_OPTS: "-Xms256m -Xmx512m -XX:+UseG1GC"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - totrackit-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 768M
          cpus: '1.0'
        reservations:
          memory: 384M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "3"

  swagger-ui:
    image: nginx:1.25-alpine
    container_name: totrackit-swagger-ui
    ports:
      - "8081:80"
    volumes:
      - ./swagger-ui.html:/usr/share/nginx/html/index.html:ro
      - ./api.yaml:/usr/share/nginx/html/api.yaml:ro
    depends_on:
      app:
        condition: service_healthy
    networks:
      - totrackit-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 64M
          cpus: '0.1'
        reservations:
          memory: 32M
          cpus: '0.05'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"

volumes:
  postgres_data:
    driver: local

networks:
  totrackit-network:
    driver: bridge
    name: totrackit-default
    ipam:
      config:
        - subnet: 172.18.0.0/16