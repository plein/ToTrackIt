plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.2.1"
}

version = "0.1"
group = "com.totrackit"

repositories {
    mavenCentral()
}

dependencies {
    // Micronaut core
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-http-server-netty")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.validation:micronaut-validation")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    
    // OpenAPI/Swagger
    implementation("io.micronaut.openapi:micronaut-openapi")
    implementation("io.swagger.core.v3:swagger-annotations")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    
    // Database dependencies
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.micronaut.data:micronaut-data-tx")
    implementation("io.micronaut.flyway:micronaut-flyway")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.sql:micronaut-jdbc")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    runtimeOnly("org.postgresql:postgresql")
    
    // Management and health checks
    implementation("io.micronaut:micronaut-management")
    
    // Logging
    runtimeOnly("ch.qos.logback:logback-classic")
    
    // YAML support
    runtimeOnly("org.yaml:snakeyaml")
    
    // Testing
    testImplementation("io.micronaut:micronaut-http-client")
    testImplementation("io.micronaut.test:micronaut-test-junit5")
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("org.junit.jupiter:junit-jupiter-engine")
    testImplementation("org.mockito:mockito-core")
    testImplementation("org.mockito:mockito-junit-jupiter")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:postgresql")
    testImplementation("org.testcontainers:testcontainers")
    testRuntimeOnly("com.h2database:h2")
}

application {
    mainClass.set("com.totrackit.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("21")
    targetCompatibility = JavaVersion.toVersion("21")
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.totrackit.*")
    }
}

// Task to copy generated OpenAPI spec to resources
task copyOpenApiSpec(type: Copy) {
    dependsOn compileJava
    from "${buildDir}/classes/java/main/META-INF/swagger/totrackit-api-0.1.yml"
    into "${projectDir}/src/main/resources"
    rename { "openapi.yml" }
}

// Make sure the OpenAPI spec is copied when building
processResources.dependsOn copyOpenApiSpec
inspectRuntimeClasspath.dependsOn copyOpenApiSpec